plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version "3.3.0"
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.jetbrains.kotlin.jvm' version "1.9.24"
    id 'org.jetbrains.kotlin.plugin.spring' version "1.9.24"
    id 'org.jetbrains.kotlin.plugin.jpa' version "1.9.24"
}

ext {
    kotlinLoggingVersion = '3.0.5'
    mockitoKotlinVersion = '5.2.1'
    mockitoInlineVersion = '2.13.0'
    kotlinProjects = [
            project(':account-api')
    ]
}

configure(kotlinProjects) {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
}

subprojects {
    group = 'com.ocean.bank'

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    ext {
        springDependencyManagementVersion = '1.1.5'
        jacocoExc = ['**/dto/*', '**/configuration/*']
        jacocoVersion = '0.8.7'
        kotlinLoggingVersion = '3.0.5'
        errorHandlingVersion = '0.0.2-SNAPSHOT'
    }


    repositories {
        mavenLocal()
        mavenCentral()
    }

    jacocoTestReport {
        dependsOn test
        finalizedBy jacocoTestCoverageVerification
    }

    jacoco { toolVersion = "${jacocoVersion}" }
    check.dependsOn jacocoTestCoverageVerification, jacocoTestReport, clean

    jacocoTestCoverageVerification {
        violationRules { rule { limit { minimum = 0.70 } } }
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, excludes: jacocoExc)
            }))
        }
    }


    java { sourceCompatibility = '17' }

    test { useJUnitPlatform() }
}


wrapper { gradleVersion = '7.6.1' }